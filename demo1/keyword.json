// Place your key bindings in this file to overwrite the defaults
[{
    "key": "ctrl+oem_1",
    "command": "extension.aceJump"
  },
  {
    "key": "alt+j",
    "command": "cursorLeft",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+l",
    "command": "cursorRight",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+k",
    "command": "cursorDown",
    "when": "editorTextFocus"
  },
  {
    "key": "up",
    "command": "cursorUp",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+j",
    "command": "cursorWordStartLeft",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+l",
    "command": "cursorWordStartRight",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "cursorWordStartLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+left",
    "command": "-cursorWordStartLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "cursorWordEndRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+right",
    "command": "-cursorWordEndRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.interactivePlayground.arrowDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "down",
    "command": "-workbench.action.interactivePlayground.arrowDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "ctrl+shift+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+k",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "down",
    "command": "-list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+k",
    "command": "repl.action.historyNext",
    "when": "inDebugRepl && onLastDebugReplLine"
  },
  {
    "key": "down",
    "command": "-repl.action.historyNext",
    "when": "inDebugRepl && onLastDebugReplLine"
  },
  {
    "key": "alt+k",
    "command": "showNextParameterHint",
    "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "down",
    "command": "-showNextParameterHint",
    "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "alt+k",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "down",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "alt+i",
    "command": "search.action.focusSearchFromResults",
    "when": "firstMatchFocus && searchViewletVisible"
  },
  {
    "key": "up",
    "command": "-search.action.focusSearchFromResults",
    "when": "firstMatchFocus && searchViewletVisible"
  },
  {
    "key": "alt+i",
    "command": "search.focus.previousInputBox",
    "when": "inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "up",
    "command": "-search.focus.previousInputBox",
    "when": "inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "alt+i",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "up",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "alt+i",
    "command": "workbench.action.interactivePlayground.arrowUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "up",
    "command": "-workbench.action.interactivePlayground.arrowUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "alt+i",
    "command": "repl.action.historyPrevious",
    "when": "inDebugRepl && onFirstDebugReplLine"
  },
  {
    "key": "up",
    "command": "-repl.action.historyPrevious",
    "when": "inDebugRepl && onFirstDebugReplLine"
  },
  {
    "key": "alt+i",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "up",
    "command": "-list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+i",
    "command": "notifications.focusPreviousToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "up",
    "command": "-notifications.focusPreviousToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "alt+i",
    "command": "showPrevParameterHint",
    "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "up",
    "command": "-showPrevParameterHint",
    "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "alt+i",
    "command": "cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "up",
    "command": "-cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+oem_2",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+oem_2",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "f3",
    "command": "editor.action.marker.next",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "alt+oem_3",
    "command": "workbench.action.focusPreviousGroup"
  },
  {
    "key": "ctrl+k ctrl+left",
    "command": "-workbench.action.focusPreviousGroup"
  },
  {
    "key": "ctrl+k ctrl+j",
    "command": "extension.embraceParenthesis",
    "when": "editorHasSelection && editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+k",
    "command": "extension.embraceSquareBrackets",
    "when": "editorHasSelection && editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+l",
    "command": "extension.embraceCurlyBrackets",
    "when": "editorHasSelection && editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "extension.embraceAngleBrackets",
    "when": "editorHasSelection && editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+a",
    "command": "extension.embraceSingleQuotes",
    "when": "editorHasSelection && editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+s",
    "command": "extension.embraceDoubleQuotes",
    "when": "editorHasSelection && editorTextFocus"
  },
  {
    "key": "ctrl+shift+x",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  }
]
